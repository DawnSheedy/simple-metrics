name: Publish unibeat-api to Staging k8s
on:
  push:
    branches: [main]

jobs:
  build:
    name: Build and Publish to Container Registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3
      - name: Build image
        run: docker build --platform=linux/amd64 -t unibeat-api .
      - name: Login to container registry
        run: doctl registry login --expiry-seconds 600
      - name: Tag image
        run: docker tag unibeat-api registry.digitalocean.com/ds-services-container/unibeat-api:${{ github.sha }}
      - name: Push image to DO Container Registry
        run: docker push registry.digitalocean.com/ds-services-container/unibeat-api:${{ github.sha }}

  deploy:
    name: Configure and deploy to staging
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Authenticate kubectl
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ds-k8s
      - name: Create namespace stg if it doesn't exist
        run: kubectl create namespace stg --dry-run=client -o yaml | kubectl apply -f -
      - name: Set DB Connection String Secret
        run: kubectl create secret generic unibeat-api-secret --from-literal=postgres-connection-string='${{ secrets.STG_POSTGRES_CONNECTION_STRING }}' -n stg --dry-run=client -o yaml | kubectl apply -f -
      - name: Helm Deploy
        run: helm upgrade --install --create-namespace -n stg --set image.tag=${{ github.sha }} --set envPrefix=stg unibeat-api unibeat-api